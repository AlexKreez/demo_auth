package com.example.demo;

import com.example.demo.domain.entityUser.User;
import com.example.demo.domain.entityUser.UserRole;
import com.example.demo.repository.UserRepository;
import com.example.demo.repository.UserRoleRepository;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.security.crypto.password.PasswordEncoder;
import lombok.RequiredArgsConstructor;

@SpringBootApplication
@RequiredArgsConstructor
public class DemoApplication implements CommandLineRunner {

    private final UserRepository userRepository;
    private final UserRoleRepository userRoleRepository;
    private final PasswordEncoder passwordEncoder;

    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }

    @Override
    public void run(String... args) {
        if (userRepository.findByLogin("admin").isEmpty()) {
            System.out.println("üîπ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ...");

            User admin = new User();
            admin.setLogin("admin");
            admin.setEmail("admin@x.ru");
            admin.setPassword(passwordEncoder.encode("admin")); // ‚úÖ –®–∏—Ñ—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º

            admin = userRepository.save(admin);
            System.out.println("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: " + admin.getLogin());

            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª–∏
            userRoleRepository.save(new UserRole(admin, "ADMIN"));
            userRoleRepository.save(new UserRole(admin, "USER"));

            System.out.println("‚úÖ –†–æ–ª–∏ ADMIN –∏ USER –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
        } else {
            System.out.println("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
        }
    }
}
