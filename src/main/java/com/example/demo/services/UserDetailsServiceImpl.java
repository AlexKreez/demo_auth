package com.example.demo.services;

import com.example.demo.domain.entityUser.User;
import com.example.demo.domain.entityUser.UserRole;
import com.example.demo.repository.UserRepository;
import com.example.demo.repository.UserRoleRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

@Service
@RequiredArgsConstructor
public class UserDetailsServiceImpl implements UserDetailsService {

    private final UserRepository userRepository;
    private final UserRoleRepository userRoleRepository;

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
//  –∏—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ª–æ–≥–∏–Ω—É, –ø–æ–ª—É—á–∞–µ—Ç –µ–≥–æ –ø–∞—Ä–æ–ª—å –∏ —Ä–æ–ª–∏, –∞ –∑–∞—Ç–µ–º –ø–µ—Ä–µ–¥–∞–µ—Ç –¥–∞–ª—å—à–µ

        System.out.println("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + username);

        User user = userRepository.findByLogin(username)
                .orElseThrow(() -> new UsernameNotFoundException("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω: " + username));

        System.out.println("‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + user.getLogin() + " (ID: " + user.getId() + ")");

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        List<UserRole> roles = userRoleRepository.findByUserId(user.getId());
        List<GrantedAuthority> authorities = roles.stream()
                .map(role -> new SimpleGrantedAuthority(role.getRole()))
                .collect(Collectors.toList());

        System.out.println("‚úÖ –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + username + ": " + authorities);

        System.out.println("üîç –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–æ–ª–∏ –¥–ª—è " + user.getLogin() + ": " + authorities);

        return new org.springframework.security.core.userdetails.User(
                user.getLogin(),
                user.getPassword(),
                authorities
        );
    }
}
//–î–æ–±–∞–≤–∏—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
//–°–µ–π—á–∞—Å –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ –º—ã –¥–µ–ª–∞–µ–º SQL-–∑–∞–ø—Ä–æ—Å
//–ú–æ–∂–Ω–æ –∫–µ—à–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã